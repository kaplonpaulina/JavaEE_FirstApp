
package controllers;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Conroller", targetNamespace = "http://controllers/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Conroller {


    /**
     * 
     * @param id
     */
    @WebMethod
    @RequestWrapper(localName = "delStudent", targetNamespace = "http://controllers/", className = "controllers.DelStudent")
    @ResponseWrapper(localName = "delStudentResponse", targetNamespace = "http://controllers/", className = "controllers.DelStudentResponse")
    public void delStudent(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns controllers.Student
     */
    @WebMethod
    @WebResult(name = "student", targetNamespace = "")
    @RequestWrapper(localName = "getStudent", targetNamespace = "http://controllers/", className = "controllers.GetStudent")
    @ResponseWrapper(localName = "getStudentResponse", targetNamespace = "http://controllers/", className = "controllers.GetStudentResponse")
    public Student getStudent(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param gender
     * @param gradeOrder
     * @param faculty
     * @return
     *     returns controllers.ListStudentsResponse.StudentList
     */
    @WebMethod
    @WebResult(name = "StudentList", targetNamespace = "")
    @RequestWrapper(localName = "listStudents", targetNamespace = "http://controllers/", className = "controllers.ListStudents")
    @ResponseWrapper(localName = "listStudentsResponse", targetNamespace = "http://controllers/", className = "controllers.ListStudentsResponse")
    public controllers.ListStudentsResponse.StudentList listStudents(
        @WebParam(name = "faculty", targetNamespace = "")
        String faculty,
        @WebParam(name = "gender", targetNamespace = "")
        String gender,
        @WebParam(name = "gradeOrder", targetNamespace = "")
        String gradeOrder);

    /**
     * 
     * @param newName
     * @param newCourses
     * @param gender
     * @param newFaculty
     * @param id
     * @param grades
     * @param newPhoto
     * @return
     *     returns controllers.Student
     */
    @WebMethod
    @WebResult(name = "student", targetNamespace = "")
    @RequestWrapper(localName = "editStudent", targetNamespace = "http://controllers/", className = "controllers.EditStudent")
    @ResponseWrapper(localName = "editStudentResponse", targetNamespace = "http://controllers/", className = "controllers.EditStudentResponse")
    public Student editStudent(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "newName", targetNamespace = "")
        String newName,
        @WebParam(name = "gender", targetNamespace = "")
        int gender,
        @WebParam(name = "newPhoto", targetNamespace = "")
        byte[] newPhoto,
        @WebParam(name = "newFaculty", targetNamespace = "")
        String newFaculty,
        @WebParam(name = "newCourses", targetNamespace = "")
        List<String> newCourses,
        @WebParam(name = "grades", targetNamespace = "")
        float grades);

    /**
     * 
     * @param courses
     * @param gender
     * @param name
     * @param photo
     * @param id
     * @param grades
     * @param faculty
     */
    @WebMethod
    @RequestWrapper(localName = "addStudent", targetNamespace = "http://controllers/", className = "controllers.AddStudent")
    @ResponseWrapper(localName = "addStudentResponse", targetNamespace = "http://controllers/", className = "controllers.AddStudentResponse")
    public void addStudent(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "gender", targetNamespace = "")
        int gender,
        @WebParam(name = "photo", targetNamespace = "")
        byte[] photo,
        @WebParam(name = "faculty", targetNamespace = "")
        String faculty,
        @WebParam(name = "courses", targetNamespace = "")
        List<String> courses,
        @WebParam(name = "grades", targetNamespace = "")
        float grades);

}
